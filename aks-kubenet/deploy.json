{
    "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "DNS Prefix": {
            "metadata": {
                "description": "DNS Prefix for the cluster"
            },
            "type": "string"
        },
        "Service Principal App ID": {
            "metadata": {
                "description": "App ID of the Service Principal"
            },
            "type": "string"
        },
        "Service Principal Object ID": {
            "metadata": {
                "description": "Object ID of the Service Principal"
            },
            "type": "string"
        },
        "Service Principal Secret": {
            "metadata": {
                "description": "Secret of the Service Principal"
            },
            "type": "securestring"
        },
        "Network Plugin": {
            "metadata": {
                "description": "Kubernetes Network Plugin"
            },
            "allowedValues": [
                "kubenet",
                "azure"
            ],
            "defaultValue": "kubenet",
            "type": "string"
        }
    },
    "variables": {
        "isKubenet": "[equals(parameters('Network Plugin'), 'kubenet')]",
        "Max Pods": 110,
        "Network Contributor Role": "[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Authorization/roleDefinitions/', '4d97b98b-1d4f-4787-a291-c67834d212e7')]",
        "VNET Name": "we-wmsnonprod-rg",
        "VNET Address Space": "10.40.40.0/22",
        "Role Assignment Name": "[concat(variables('VNET Name'), '/Microsoft.Authorization/', guid(concat(resourceGroup().id), variables('Network Contributor Role')))]",
        "AKS Subnet Address Space": "10.40.40.0/26",
        "Service Subnet Address Space": "10.40.40.192/20",
        "Pod Cidr": "[if(variables('isKubenet'), '10.123.0.1/17', '')]",
        "Cluster-IPs Service Cidr": "10.123.128.0/17",
        "Dns Service IP": "10.123.0.10",
        "Docker Bridge Cidr": "10.124.0.1/16",
        "kubernetes version": "1.11.5",
        "VM Size": "Standard_DS3_v2",
        "instance count": 3,
        "ssh public key": "ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQCkauo6KZ/ttx5ghfyZqiAdWIoh+Zjbyi2vm6Km5UdLXJprIVRSWkeW9FodD5I39aBy4w71UA1pTNPVlwDO9T87WOSNjcCi1i/6XBUpgChntHAtjcAOc8QClFHDNIvGotdxaxxwHoPrX6H0gAcrA4jVWmE0weIYvK2X4gRvrn3dWKK9LJzCGWvo4MID8q2YpQE4AQLdehj7/fR2Yvgil0CLXlbBCwFtZsPsbxLjaOhMSmzF+/akRjwrSXjRcsWXkyTjPfliS+hx4qaySS0nw630HkDTA+9sjPu9Po1hCqWVt1EyKGDbNihHeRim7UHVcfG6M5xtQt3wNiQzxkR1IrIn cbhaskar@GOTCND8272RMX"
    },
    "resources": [
        {
            "type": "Microsoft.Network/virtualNetworks",
            "apiVersion": "2017-10-01",
            "name": "[variables('VNet Name')]",
            "location": "[resourceGroup().location]",
            "dependsOn": [],
            "properties": {
                "addressSpace": {
                    "addressPrefixes": [
                        "[variables('VNET Address Space')]"
                    ]
                },
                "subnets": [
                    {
                        "name": "weugcswmsk8ssanbox-aks",
                        "properties": {
                            "addressPrefix": "[variables('AKS Subnet Address Space')]"
                        }
                    },
                    {
                        "name": "weugcswmsk8ssanbox-svc",
                        "properties": {
                            "addressPrefix": "[variables('Service Subnet Address Space')]"
                        }
                    }
                ]
            },
            "resources": []
        },
        {
            "type": "Microsoft.Network/virtualNetworks/providers/roleAssignments",
            "apiVersion": "2017-05-01",
            "name": "[variables('Role Assignment Name')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/virtualNetworks', variables('VNET Name'))]"
            ],
            "properties": {
                "roleDefinitionId": "[variables('Network Contributor Role')]",
                "principalId": "[parameters('Service Principal Object ID')]"
            }
        },
        {
            "type": "Microsoft.ContainerService/managedClusters",
            "name": "cluster",
            "apiVersion": "2018-03-31",
            "location": "[resourceGroup().location]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/virtualNetworks', variables('VNET Name'))]"
            ],
            "properties": {
                "kubernetesVersion": "[variables('kubernetes version')]",
                "dnsPrefix": "[parameters('DNS Prefix')]",
                "addonProfiles": {
                    "httpApplicationRouting": {
                        "enabled": true
                    }
                },
                "servicePrincipalProfile": {
                    "clientId": "[parameters('Service Principal App ID')]",
                    "secret": "[parameters('Service Principal Secret')]"
                },
                "agentPoolProfiles": [
                    {
                        "name": "agentpool",
                        "count": "[variables('instance count')]",
                        "vmSize": "[variables('VM Size')]",
                        "vnetSubnetID": "[resourceId('Microsoft.Network/virtualNetworks/subnets', variables('VNET Name'), 'aks')]",
                        "maxPods": "[variables('Max Pods')]",
                        "osType": "Linux",
                        "storageProfile": "ManagedDisks"
                    }
                ],
                "linuxProfile": {
                    "adminUsername": "weugcswmsk8ssanbox-admin",
                    "ssh": {
                        "publicKeys": [
                            {
                                "keyData": "[variables('ssh public key')]"
                            }
                        ]
                    }
                },
                "networkProfile": {
                    "networkPlugin": "[parameters('Network Plugin')]",
                    "podCidr": "[variables('Pod Cidr')]",
                    "serviceCidr": "[variables('Cluster-IPs Service Cidr')]",
                    "dnsServiceIP": "[variables('Dns Service IP')]",
                    "dockerBridgeCidr": "[variables('Docker Bridge Cidr')]"
                }
            }
        }
    ],
    "outputs": {
        "controlPlaneFQDN": {
            "type": "string",
            "value": "[reference('cluster').fqdn]"
        }
    }
}
